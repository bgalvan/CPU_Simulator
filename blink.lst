
blink.elf:     file format elf32-avr


Disassembly of section .text:

00000000 <__ctors_end>:
   0:	11 24       	eor	r1, r1
   2:	1f be       	out	0x3f, r1	; 63
   4:	cf ef       	ldi	r28, 0xFF	; 255
   6:	d8 e0       	ldi	r29, 0x08	; 8
   8:	de bf       	out	0x3e, r29	; 62
   a:	cd bf       	out	0x3d, r28	; 61
   c:	80 e8       	ldi	r24, 0x80	; 128
   e:	80 93 61 00 	sts	0x0061, r24	; 0x800061 <__TEXT_REGION_LENGTH__+0x7e0061>
  12:	10 92 61 00 	sts	0x0061, r1	; 0x800061 <__TEXT_REGION_LENGTH__+0x7e0061>
  16:	25 9a       	sbi	0x04, 5	; 4
  18:	2d 98       	cbi	0x05, 5	; 5
  1a:	0e 94 12 00 	call	0x24	; 0x24 <toggle>
  1e:	0e 94 17 00 	call	0x2e	; 0x2e <delay>
  22:	fb cf       	rjmp	.-10     	; 0x1a <__ctors_end+0x1a>

00000024 <toggle>:
  24:	85 b1       	in	r24, 0x05	; 5
  26:	90 e2       	ldi	r25, 0x20	; 32
  28:	89 27       	eor	r24, r25
  2a:	85 b9       	out	0x05, r24	; 5
  2c:	08 95       	ret

0000002e <delay>:
  2e:	af ef       	ldi	r26, 0xFF	; 255
  30:	0e 94 1d 00 	call	0x3a	; 0x3a <loop>
  34:	aa 95       	dec	r26
  36:	e1 f7       	brne	.-8      	; 0x30 <delay+0x2>
  38:	08 95       	ret

0000003a <loop>:
  3a:	ef ef       	ldi	r30, 0xFF	; 255
  3c:	0e 94 23 00 	call	0x46	; 0x46 <innerloop>
  40:	ea 95       	dec	r30
  42:	e1 f7       	brne	.-8      	; 0x3c <loop+0x2>
  44:	08 95       	ret

00000046 <innerloop>:
  46:	ff ef       	ldi	r31, 0xFF	; 255
  48:	fa 95       	dec	r31
  4a:	f1 f7       	brne	.-4      	; 0x48 <innerloop+0x2>
  4c:	08 95       	ret
